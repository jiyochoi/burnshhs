{"ast":null,"code":"var _jsxFileName = \"/Users/jiyochoi/burstshhs/burstshhs/src/App.js\",\n  _s = $RefreshSig$();\nimport { render } from '@testing-library/react';\nimport { CSSTransition } from 'react-transition-group';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport gunSound from './snd/gun2.mp3';\nimport backgroundSound from './snd/jyo.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst audio = new Audio(gunSound);\nconst bgm = new Audio(backgroundSound);\nfunction App() {\n  _s();\n  const getImg = () => {\n    return \"img/hakgyo.png\";\n  };\n  const nodeRef = React.useRef(null);\n  const [click, setClick] = useState(0);\n  const [clickState, setClickState] = useState(0);\n  const [bgmState, setBgmState] = useState(1);\n  const [hakgyoImg, setHakgyoImg] = useState(getImg);\n\n  /*\n    const useAudio = () => {\n      const [loaded, setLoaded] = useState(0);\n  \n      useEffect(() => {\n        //AudioContext 생성\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        const audioContext = new AudioContext();\n  \n        //AudioContext를 통해 AudioBufferSourceNode 생성\n        const fromis9 = [];\n  \n        fromis9.push(\n          new Promise(async(resolve) => {\n            //오디오 파일 로드\n            const res = await fetch(\"snd/gun2.mp3\");\n            //arrayBuffer로 이진 데이터로 변환\n            const arrayBuffer = await res.ArrayBuffer;\n            //AudioContext를 통해 AudioBuffer 생성\n            const audioBuffer = await AudioContext.decodeAudioData(arrayBuffer);\n            //AudioBufferSourceNode 생성\n            const AudioBufferSourceNode = await audioContext.createBufferSource();\n            \n            //AudioBufferSourceNode에 AudioBuffer 연결\n            AudioBufferSourceNode.buffer = audioBuffer;\n            //스피커에 연결\n            AudioBufferSourceNode.connect(audioContext.destination);\n  \n            AudioBufferSourceNode.start();\n  \n            resolve();\n          })\n        );\n  \n        Promise.all(fromis9).then(() => {\n          setLoaded(true);\n        })\n      });\n  \n      return{\n        loaded,\n        audios\n      };\n    }\n  */\n\n  audio.loop = false;\n  audio.volume = 0.5;\n  bgm.loop = true;\n  bgm.volume = 0.3;\n  const toggleBackgroundMusic = () => setBgmState(old => !old);\n  useEffect(() => {\n    if (bgmState) bgm.play();else {\n      bgm.pause();\n      bgm.muted = true;\n      bgm.loop = false;\n      bgm.currentTime = 0;\n      console.log(\"bgm pause\");\n    }\n  }, [bgmState]);\n  const StartClick = () => {\n    setClick(click + 1);\n    setClickState(0);\n    setHakgyoImg(\"img/hakgyoboom.png\");\n    audio.play();\n  };\n  const endClick = () => {\n    setClickState(1);\n    setHakgyoImg(getImg);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onPointerDown: StartClick,\n    onPointerUp: endClick,\n    onLostPointerCapture: endClick,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BURN SeoHyunHighSchool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleBackgroundMusic,\n      children: \"BGM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: nodeRef,\n      in: clickState,\n      timeout: 30,\n      classNames: \"hakgyo\",\n      onEnter: () => {\n        setHakgyoImg(\"img/hakgyo.png\");\n      },\n      onExited: () => {\n        setHakgyoImg(\"img/hakgyoboom.png\");\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"count\",\n        children: click\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"hakgyo\",\n      src: hakgyoImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"clJmpP5TkQ6Mp1uMLi6ZBIqadIY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["render","CSSTransition","React","useEffect","useState","gunSound","backgroundSound","audio","Audio","bgm","App","getImg","nodeRef","useRef","click","setClick","clickState","setClickState","bgmState","setBgmState","hakgyoImg","setHakgyoImg","loop","volume","toggleBackgroundMusic","old","play","pause","muted","currentTime","console","log","StartClick","endClick"],"sources":["/Users/jiyochoi/burstshhs/burstshhs/src/App.js"],"sourcesContent":["import { render } from '@testing-library/react';\nimport { CSSTransition } from 'react-transition-group'\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport gunSound from './snd/gun2.mp3';\nimport backgroundSound from './snd/jyo.mp3';\n\nconst audio = new Audio(gunSound);\nconst bgm = new Audio(backgroundSound);\n\nfunction App() {\n  \n  const getImg = () => {\n    return \"img/hakgyo.png\";\n  }\n\n  const nodeRef = React.useRef(null);\n\n  const [click, setClick] = useState(0);\n\n  const [clickState, setClickState] = useState(0);\n\n  const [bgmState, setBgmState] = useState(1);\n\n  const [hakgyoImg, setHakgyoImg] = useState(getImg);\n\n/*\n  const useAudio = () => {\n    const [loaded, setLoaded] = useState(0);\n\n    useEffect(() => {\n      //AudioContext 생성\n      const AudioContext = window.AudioContext || window.webkitAudioContext;\n      const audioContext = new AudioContext();\n\n      //AudioContext를 통해 AudioBufferSourceNode 생성\n      const fromis9 = [];\n\n      fromis9.push(\n        new Promise(async(resolve) => {\n          //오디오 파일 로드\n          const res = await fetch(\"snd/gun2.mp3\");\n          //arrayBuffer로 이진 데이터로 변환\n          const arrayBuffer = await res.ArrayBuffer;\n          //AudioContext를 통해 AudioBuffer 생성\n          const audioBuffer = await AudioContext.decodeAudioData(arrayBuffer);\n          //AudioBufferSourceNode 생성\n          const AudioBufferSourceNode = await audioContext.createBufferSource();\n          \n          //AudioBufferSourceNode에 AudioBuffer 연결\n          AudioBufferSourceNode.buffer = audioBuffer;\n          //스피커에 연결\n          AudioBufferSourceNode.connect(audioContext.destination);\n\n          AudioBufferSourceNode.start();\n\n          resolve();\n        })\n      );\n\n      Promise.all(fromis9).then(() => {\n        setLoaded(true);\n      })\n    });\n\n    return{\n      loaded,\n      audios\n    };\n  }\n*/\n\n  audio.loop = false;\n  audio.volume = 0.5;\n\n  bgm.loop = true;\n  bgm.volume = 0.3;\n\n  const toggleBackgroundMusic = () => setBgmState(old => !old);\n  \n  useEffect(() => {\n    if (bgmState) bgm.play();\n    else{\n      bgm.pause();\n      bgm.muted = true;\n      bgm.loop = false;\n      bgm.currentTime = 0;\n      console.log(\"bgm pause\");\n    }\n  }, [bgmState])\n\n  const StartClick = () => {\n    setClick(click + 1);\n    setClickState(0);\n    setHakgyoImg(\"img/hakgyoboom.png\");\n    audio.play();\n  }\n\n  const endClick = () => {\n    setClickState(1);\n    setHakgyoImg(getImg);\n  }\n\n  return(\n    <div onPointerDown={StartClick} onPointerUp={endClick} onLostPointerCapture={endClick}>\n      <h1>BURN SeoHyunHighSchool</h1>\n      <button onClick={toggleBackgroundMusic}>BGM</button>\n      <CSSTransition\n        nodeRef={nodeRef}\n        in={clickState}\n        timeout={30}\n        classNames=\"hakgyo\"\n        onEnter={()=>{setHakgyoImg(\"img/hakgyo.png\");}}\n        onExited={()=>{setHakgyoImg(\"img/hakgyoboom.png\");}}\n        >\n        <div className=\"count\">{click}</div>\n      </CSSTransition>\n      <img id=\"hakgyo\" src={hakgyoImg} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}