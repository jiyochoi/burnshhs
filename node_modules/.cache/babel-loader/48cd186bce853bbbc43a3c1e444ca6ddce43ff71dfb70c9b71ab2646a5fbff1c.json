{"ast":null,"code":"var _jsxFileName = \"/Users/jiyochoi/burstshhs/burstshhs/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'itty-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = new Router();\nrouter.post('/score/:classId',\n/**\n *\n * @param {import('itty-router').Request & { params: { classId: string } }} req\n * @param {{ DB: import('@cloudflare/workers-types').D1Database }} env\n */\nasync (req, env) => {\n  var _req$json;\n  const body = await ((_req$json = req.json) === null || _req$json === void 0 ? void 0 : _req$json.call(req));\n  if (!body || typeof body.nickname !== 'string' || typeof body.score !== 'number') {\n    return new Response('Invalid Request', {\n      status: 400\n    });\n  }\n  const res = await env.DB.prepare('INSERT INTO scores VALUES (?, ?, ?)').bind(Number(req.params.classId), body.nickname, body.score).run();\n  if (res.success) {\n    return new Response('OK');\n  } else {\n    return new Response(res.error, {\n      status: 500\n    });\n  }\n}).get('/score/:classId/ranking',\n/**\n *\n * @param {import('itty-router').Request & { params: { classId: string } }} req\n * @param {{ DB: import('@cloudflare/workers-types').D1Database }} env\n */\nasync (req, env) => {\n  const res = await env.DB.prepare('SELECT * FROM scores WHERE classId = ? ORDER BY score DESC').bind(Number(req.params.classId)).all();\n  if (res.success) {\n    return new Response(JSON.stringify(res.results), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } else {\n    return new Response(res.error, {\n      status: 500\n    });\n  }\n}).all('*', () => new Response('Not Found.', {\n  status: 404\n}));\nexport default {\n  fetch: router.handle\n};\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","Router","router","post","req","env","body","json","nickname","score","Response","status","res","DB","prepare","bind","Number","params","classId","run","success","error","get","all","JSON","stringify","results","headers","fetch","handle","root","createRoot","document","getElementById","render"],"sources":["/Users/jiyochoi/burstshhs/burstshhs/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'itty-router';\n\nconst router = new Router();\n\nrouter\n  .post(\n    '/score/:classId',\n    /**\n     *\n     * @param {import('itty-router').Request & { params: { classId: string } }} req\n     * @param {{ DB: import('@cloudflare/workers-types').D1Database }} env\n     */\n    async (req, env) => {\n      const body = await req.json?.();\n      if (\n        !body ||\n        typeof body.nickname !== 'string' ||\n        typeof body.score !== 'number'\n      ) {\n        return new Response('Invalid Request', { status: 400 });\n      }\n\n      const res = await env.DB.prepare('INSERT INTO scores VALUES (?, ?, ?)')\n        .bind(Number(req.params.classId), body.nickname, body.score)\n        .run();\n\n      if (res.success) {\n        return new Response('OK');\n      } else {\n        return new Response(res.error, { status: 500 });\n      }\n    },\n  )\n  .get(\n    '/score/:classId/ranking',\n    /**\n     *\n     * @param {import('itty-router').Request & { params: { classId: string } }} req\n     * @param {{ DB: import('@cloudflare/workers-types').D1Database }} env\n     */\n    async (req, env) => {\n      const res = await env.DB.prepare(\n        'SELECT * FROM scores WHERE classId = ? ORDER BY score DESC',\n      )\n        .bind(Number(req.params.classId))\n        .all();\n\n      if (res.success) {\n        return new Response(JSON.stringify(res.results), {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n      } else {\n        return new Response(res.error, { status: 500 });\n      }\n    },\n  )\n  .all('*', () => new Response('Not Found.', { status: 404 }));\n\nexport default {\n  fetch: router.handle,\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,MAAM,QAAQ,aAAa;AAAC;AAErC,MAAMC,MAAM,GAAG,IAAID,MAAM,EAAE;AAE3BC,MAAM,CACHC,IAAI,CACH,iBAAiB;AACjB;AACJ;AACA;AACA;AACA;AACI,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAAA;EAClB,MAAMC,IAAI,GAAG,oBAAMF,GAAG,CAACG,IAAI,8CAAR,eAAAH,GAAG,CAAS;EAC/B,IACE,CAACE,IAAI,IACL,OAAOA,IAAI,CAACE,QAAQ,KAAK,QAAQ,IACjC,OAAOF,IAAI,CAACG,KAAK,KAAK,QAAQ,EAC9B;IACA,OAAO,IAAIC,QAAQ,CAAC,iBAAiB,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACzD;EAEA,MAAMC,GAAG,GAAG,MAAMP,GAAG,CAACQ,EAAE,CAACC,OAAO,CAAC,qCAAqC,CAAC,CACpEC,IAAI,CAACC,MAAM,CAACZ,GAAG,CAACa,MAAM,CAACC,OAAO,CAAC,EAAEZ,IAAI,CAACE,QAAQ,EAAEF,IAAI,CAACG,KAAK,CAAC,CAC3DU,GAAG,EAAE;EAER,IAAIP,GAAG,CAACQ,OAAO,EAAE;IACf,OAAO,IAAIV,QAAQ,CAAC,IAAI,CAAC;EAC3B,CAAC,MAAM;IACL,OAAO,IAAIA,QAAQ,CAACE,GAAG,CAACS,KAAK,EAAE;MAAEV,MAAM,EAAE;IAAI,CAAC,CAAC;EACjD;AACF,CAAC,CACF,CACAW,GAAG,CACF,yBAAyB;AACzB;AACJ;AACA;AACA;AACA;AACI,OAAOlB,GAAG,EAAEC,GAAG,KAAK;EAClB,MAAMO,GAAG,GAAG,MAAMP,GAAG,CAACQ,EAAE,CAACC,OAAO,CAC9B,4DAA4D,CAC7D,CACEC,IAAI,CAACC,MAAM,CAACZ,GAAG,CAACa,MAAM,CAACC,OAAO,CAAC,CAAC,CAChCK,GAAG,EAAE;EAER,IAAIX,GAAG,CAACQ,OAAO,EAAE;IACf,OAAO,IAAIV,QAAQ,CAACc,IAAI,CAACC,SAAS,CAACb,GAAG,CAACc,OAAO,CAAC,EAAE;MAC/CC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAO,IAAIjB,QAAQ,CAACE,GAAG,CAACS,KAAK,EAAE;MAAEV,MAAM,EAAE;IAAI,CAAC,CAAC;EACjD;AACF,CAAC,CACF,CACAY,GAAG,CAAC,GAAG,EAAE,MAAM,IAAIb,QAAQ,CAAC,YAAY,EAAE;EAAEC,MAAM,EAAE;AAAI,CAAC,CAAC,CAAC;AAE9D,eAAe;EACbiB,KAAK,EAAE1B,MAAM,CAAC2B;AAChB,CAAC;AAED,MAAMC,IAAI,GAAGhC,QAAQ,CAACiC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACU,CACpB;;AAED;AACA;AACA;AACAlC,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}