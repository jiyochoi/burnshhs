{"ast":null,"code":"var _jsxFileName = \"/Users/jiyochoi/burstshhs/burstshhs/src/App.js\",\n  _s = $RefreshSig$();\nimport { render } from '@testing-library/react';\nimport { CSSTransition } from 'react-transition-group';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport gunSound from './snd/gun2.mp3';\nimport backgroundSound from './snd/jyo.mp3';\nimport Join from './Join';\nimport Info from './Info';\nimport { getScore, addScore } from './api';\nimport { debounce } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bgm = new Audio(backgroundSound);\nfunction App() {\n  _s();\n  const getImg = () => {\n    return \"img/hakgyo.png\";\n  };\n  const nodeRef = React.useRef(null);\n  const [click, setClick] = useState(0);\n  const [clickState, setClickState] = useState(false);\n  const [bgmState, setBgmState] = useState(true);\n  const [hakgyoImg, setHakgyoImg] = useState(getImg);\n  const [audioImg, setAudioImg] = useState(\"img/audio_on.png\");\n  const [isJoin, setIsJoin] = useState(false);\n  const [isInfo, setIsInfo] = useState(false);\n  const [player, setPlayer] = useState(null);\n  const [classScore, setClassScore] = useState(0);\n  const onClickInfo = () => {\n    setIsInfo(true);\n  };\n  const syncClassScore = async () => {\n    await setClassScore(getScore(player.grade, player.class));\n  };\n  const uploadClicks = debounce(async () => {\n    await addScore(player.grade, player.class, click);\n    await syncClassScore();\n    setClick(0);\n  }, 2000);\n  /*\n    const useAudio = () => {\n      const [loaded, setLoaded] = useState(0);\n  \n      useEffect(() => {\n        //AudioContext 생성\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        const audioContext = new AudioContext();\n  \n        //AudioContext를 통해 AudioBufferSourceNode 생성\n        const fromis9 = [];\n  \n        fromis9.push(\n          new Promise(async(resolve) => {\n            //오디오 파일 로드\n            const res = await fetch(\"snd/gun2.mp3\");\n            //arrayBuffer로 이진 데이터로 변환\n            const arrayBuffer = await res.ArrayBuffer;\n            //AudioContext를 통해 AudioBuffer 생성\n            const audioBuffer = await AudioContext.decodeAudioData(arrayBuffer);\n            //AudioBufferSourceNode 생성\n            const AudioBufferSourceNode = await audioContext.createBufferSource();\n            \n            //AudioBufferSourceNode에 AudioBuffer 연결\n            AudioBufferSourceNode.buffer = audioBuffer;\n            //스피커에 연결\n            AudioBufferSourceNode.connect(audioContext.destination);\n  \n            AudioBufferSourceNode.start();\n  \n            resolve();\n          })\n        );\n  \n        Promise.all(fromis9).then(() => {\n          setLoaded(true);\n        })\n      });\n  \n      return{\n        loaded,\n        audios\n      };\n    }\n  */\n  const audio = new Audio(gunSound);\n  audio.loop = false;\n  audio.volume = 0.5;\n  bgm.loop = true;\n  bgm.volume = 0.3;\n  const toggleBackgroundMusic = () => setBgmState(old => !old);\n  useEffect(() => {\n    if (bgmState) {\n      bgm.play();\n      setAudioImg(\"img/audio_on.png\");\n    } else {\n      bgm.pause();\n      bgm.currentTime = 0;\n      setAudioImg(\"img/audio_off.png\");\n    }\n  }, [bgmState]);\n  const StartClick = () => {\n    if (!isJoin || isInfo) return;\n    setClick(click + 1);\n    setClickState(false);\n    setHakgyoImg(\"img/hakgyoboom.png\");\n    audio.play();\n  };\n  const endClick = () => {\n    if (!isJoin || isInfo) return;\n    setClickState(true);\n    setHakgyoImg(getImg);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onPointerDown: StartClick,\n    onPointerUp: endClick,\n    onLostPointerCapture: endClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: !isJoin ? /*#__PURE__*/_jsxDEV(Join, {\n        open: !isJoin,\n        onJoin: _ref => {\n          let {\n            score,\n            ...playerData\n          } = _ref;\n          setPlayer(playerData);\n          setClassScore(score);\n          setIsJoin(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this) : `${player.class}-${player.grade} ${player.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BURN SeoHyunHighSchool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"states\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"audiostate\",\n        src: audioImg,\n        onClick: toggleBackgroundMusic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"info\",\n          src: \"img/info.png\",\n          onClick: onClickInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), isInfo && /*#__PURE__*/_jsxDEV(Info, {\n          open: isInfo,\n          onClose: () => {\n            setIsInfo(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      nodeRef: nodeRef,\n      in: clickState,\n      timeout: 30,\n      classNames: \"hakgyo\",\n      onEnter: () => {\n        setHakgyoImg(\"img/hakgyo.png\");\n      },\n      onExited: () => {\n        setHakgyoImg(\"img/hakgyoboom.png\");\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"count\",\n        children: click + classScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"hakgyo\",\n      src: hakgyoImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zdU3t6Y3sAA4ft95edn1OqM9kpM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["render","CSSTransition","React","useEffect","useState","gunSound","backgroundSound","Join","Info","getScore","addScore","debounce","bgm","Audio","App","getImg","nodeRef","useRef","click","setClick","clickState","setClickState","bgmState","setBgmState","hakgyoImg","setHakgyoImg","audioImg","setAudioImg","isJoin","setIsJoin","isInfo","setIsInfo","player","setPlayer","classScore","setClassScore","onClickInfo","syncClassScore","grade","class","uploadClicks","audio","loop","volume","toggleBackgroundMusic","old","play","pause","currentTime","StartClick","endClick","score","playerData","name"],"sources":["/Users/jiyochoi/burstshhs/burstshhs/src/App.js"],"sourcesContent":["import { render } from '@testing-library/react';\nimport { CSSTransition } from 'react-transition-group'\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport gunSound from './snd/gun2.mp3';\nimport backgroundSound from './snd/jyo.mp3';\nimport Join from './Join';\nimport Info from './Info';\nimport { getScore, addScore } from './api';\nimport { debounce } from 'lodash';\n\nconst bgm = new Audio(backgroundSound);\n\nfunction App() {\n  \n  const getImg = () => {\n    return \"img/hakgyo.png\";\n  }\n\n  const nodeRef = React.useRef(null);\n\n  const [click, setClick] = useState(0);\n\n  const [clickState, setClickState] = useState(false);\n\n  const [bgmState, setBgmState] = useState(true);\n\n  const [hakgyoImg, setHakgyoImg] = useState(getImg);\n\n  const [audioImg, setAudioImg] = useState(\"img/audio_on.png\");\n  const [isJoin, setIsJoin] = useState(false);\n  const [isInfo, setIsInfo] = useState(false);\n\n  const [player, setPlayer] = useState(null);\n  const [classScore, setClassScore] = useState(0);\n\n  const onClickInfo = () => {\n    setIsInfo(true);\n  }\n\n  const syncClassScore = async () => {\n    await setClassScore(getScore(player.grade, player.class));\n  }\n\n  const uploadClicks = debounce(async () => {\n    await addScore(player.grade, player.class, click);\n    await syncClassScore();\n    setClick(0);\n  }, 2000);\n/*\n  const useAudio = () => {\n    const [loaded, setLoaded] = useState(0);\n\n    useEffect(() => {\n      //AudioContext 생성\n      const AudioContext = window.AudioContext || window.webkitAudioContext;\n      const audioContext = new AudioContext();\n\n      //AudioContext를 통해 AudioBufferSourceNode 생성\n      const fromis9 = [];\n\n      fromis9.push(\n        new Promise(async(resolve) => {\n          //오디오 파일 로드\n          const res = await fetch(\"snd/gun2.mp3\");\n          //arrayBuffer로 이진 데이터로 변환\n          const arrayBuffer = await res.ArrayBuffer;\n          //AudioContext를 통해 AudioBuffer 생성\n          const audioBuffer = await AudioContext.decodeAudioData(arrayBuffer);\n          //AudioBufferSourceNode 생성\n          const AudioBufferSourceNode = await audioContext.createBufferSource();\n          \n          //AudioBufferSourceNode에 AudioBuffer 연결\n          AudioBufferSourceNode.buffer = audioBuffer;\n          //스피커에 연결\n          AudioBufferSourceNode.connect(audioContext.destination);\n\n          AudioBufferSourceNode.start();\n\n          resolve();\n        })\n      );\n\n      Promise.all(fromis9).then(() => {\n        setLoaded(true);\n      })\n    });\n\n    return{\n      loaded,\n      audios\n    };\n  }\n*/\n  const audio = new Audio(gunSound);\n  audio.loop = false;\n  audio.volume = 0.5;\n\n  bgm.loop = true;\n  bgm.volume = 0.3;\n\n  const toggleBackgroundMusic = () => setBgmState(old => !old);\n  \n  useEffect(() => {\n    if (bgmState) {\n      bgm.play();\n      setAudioImg(\"img/audio_on.png\");\n    } else{\n      bgm.pause();\n      bgm.currentTime = 0;\n      setAudioImg(\"img/audio_off.png\");\n    }\n  }, [bgmState])\n  \n  const StartClick = () => {\n    if (!isJoin || isInfo) return;\n    setClick(click + 1);\n    setClickState(false);\n    setHakgyoImg(\"img/hakgyoboom.png\");\n    audio.play();\n  }\n\n  const endClick = () => {\n    if (!isJoin || isInfo) return;\n    setClickState(true);\n    setHakgyoImg(getImg);\n  }\n\n  return(\n    <div onPointerDown={StartClick} onPointerUp={endClick} onLostPointerCapture={endClick}>\n          <div className=\"App\">\n            {\n              !isJoin \n              ? (\n                <Join\n                  open={!isJoin}\n                  onJoin={({ score, ...playerData }) => {\n                    setPlayer(playerData);\n                    setClassScore(score);\n                    setIsJoin(true);\n                  }}\n                />)\n              : `${player.class}-${player.grade} ${player.name}`\n            }\n          </div>\n      <h1>BURN SeoHyunHighSchool</h1>\n      <div class = \"states\">\n        <img id = \"audiostate\" src = {audioImg} onClick={toggleBackgroundMusic} />\n        <div>\n          <img id = \"info\" src = \"img/info.png\" onClick={onClickInfo}/>\n          {isInfo && (<Info\n            open={isInfo}\n            onClose={() => {\n              setIsInfo(false);\n            }}\n          />)}\n          </div>\n      </div>\n      <CSSTransition\n        nodeRef={nodeRef}\n        in={clickState}\n        timeout={30}\n        classNames=\"hakgyo\"\n        onEnter={()=>{setHakgyoImg(\"img/hakgyo.png\");}}\n        onExited={()=>{setHakgyoImg(\"img/hakgyoboom.png\");}}\n        >\n        <div className=\"count\">{click + classScore}</div>\n      </CSSTransition>\n      <img class=\"hakgyo\" src={hakgyoImg} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}